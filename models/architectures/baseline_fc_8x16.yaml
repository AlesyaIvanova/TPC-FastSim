generator:
    - block_type: 'fully_connected'
      arguments:
        units: [32, 64, 64, 64, 128]
        activations: ['relu', 'relu', 'relu', 'relu', 'relu']
        kernel_init: 'glorot_uniform'
        input_shape: [37,]
        output_shape: [8, 16]
        name: 'generator'

discriminator:
    - block_type: 'connect'
      arguments:
        vector_shape: [5,]
        img_shape: [8, 16]
        vector_bypass: False
        concat_outputs: True
        name: 'discriminator_tail'
        block:
          block_type: 'conv'
          arguments:
            filters: [16, 16, 32, 32, 64, 64]
            kernel_sizes: [3, 3, 3, 3, 3, 2]
            paddings: ['same', 'same', 'same', 'same', 'valid', 'valid']
            activations: ['relu', 'relu', 'relu', 'relu', 'relu', 'relu']
            poolings: [NULL, [1, 2], NULL, 2, NULL, NULL]
            kernel_init: glorot_uniform
            input_shape: NULL
            output_shape: [64,]
            dropouts: [0.02, 0.02, 0.02, 0.02, 0.02, 0.02]
            name: discriminator_conv_block
    - block_type: 'fully_connected'
      arguments:
        units: [128, 1]
        activations: ['relu', NULL]
        kernel_init: 'glorot_uniform'
        input_shape: [69,]
        output_shape: NULL
        name: 'discriminator_head'